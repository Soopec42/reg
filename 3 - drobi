#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>

using namespace std;


void qsort(vector<double> &a, vector<double> &b)
{
	vector<double> doma, domb;
	vector<double> poslema, poslemb;
	if (a.size() < 2)
	{
		a = a;
		b = b;
	}
	else {
		double sredna = a[0], srednb = b[0];
		for (double i = 1; i < a.size(); i++)
		{
			if (a[i] / b[i] < sredna / srednb)
			{
				doma.push_back(a[i]);
				domb.push_back(b[i]);
			}
			else
			{
				poslema.push_back(a[i]);
				poslemb.push_back(b[i]);
			}
		}

		qsort(doma, domb);
		doma.push_back(sredna);
		domb.push_back(srednb);
		qsort(poslema, poslemb);
		for (double i = 0; i < poslema.size(); i++)
		{
			doma.push_back(poslema[i]);
			domb.push_back(poslemb[i]);
		}
		a = doma;
		b = domb;
	}
}

double nod(double a, double b)
{
	double d, no;
	if (a == b)
	{
		return a;
	}
	if (a == 1)
	{
		return 1;

	}
	if (b == 1)
	{
		return 1;

	}
	d = a - b;
	if (d < 0)
	{
		d = -d;
		no = nod(a, d);
	}
	else
	{
		no = nod(b, d);
	}
	return no;
}


int main() {
	
	double n, q, nok;
	
	cin >> n >> q;
	vector<double> a(n);
	vector<double> b(n);
	vector<double> c(q);
	for (double i = 0; i < n; i++)
	{
		cin >> a[i];
	}
	for (double i = 0; i < n; i++)
	{
		cin >> b[i];
	}
	for (double i = 0; i < q; i++)
	{
		cin >> c[i];
	}

	vector<double> newa;
	vector<double> newb;
	for (double i = 0; i < a.size(); i++)
	{
		for (double j = 0; j < b.size(); j++)
		{
			newa.push_back(a[i]);
		}
	}
	for (double i = 0; i < a.size(); i++)
	{
		for (double j = 0; j < b.size(); j++)
		{
			newb.push_back(b[j]);
		}
	}

	for (double i = 0; i < newa.size(); i++)
	{
		 
		nok = nod(newa[i], newb[i]);
		newb[i] /= nok;
		newa[i] /= nok;
			
		
	}
	qsort(newa, newb);

	cout.precision(0);
	
	for (double i = 0; i < c.size(); i++)
		cout << fixed  << newa[c[i]-1] << " " << newb[c[i]-1] << endl;
	
	

}
